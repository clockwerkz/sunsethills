{"version":3,"sources":["components/NavBar.js","components/EntryForm.js","components/Building.js","components/Buildings.js","App.js","index.js","images/sunset-512.png"],"names":["NavBar","className","src","logo","EntryForm","setList","setFormActive","useState","input","setInput","useEffect","arr","match","calculateVals","slice","map","el","num","parseInt","type","value","onChange","e","target","placeholder","onClick","Building","height","visibility","index","formActive","updateBldg","deleteBldg","bgColor","style","background","submitBldgUpdate","val","icon","faPlus","faTrash","faMinus","Buildings","list","addBldg","max","faBuilding","length","key","App","i","atFront","concat","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f81a4584.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../images/sunset-512.png';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <img className=\"navbar__img\" src={logo} />\r\n            <div className=\"navbar__title-wrapper\">\r\n                <h2 className=\"navbar__title\">Sunset Hills <span className=\"navbar__subtitle\">Challenge</span></h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from 'react';\r\n\r\nconst EntryForm = ({ setList, setFormActive }) => {\r\n    \r\n    const [ input, setInput ] = useState('');\r\n\r\n    useEffect(()=>{\r\n        const arr = input.match(/-?\\d+/g); \r\n        if (arr) {\r\n            const calculateVals = arr.slice(0,20).map(el => {\r\n                let num = parseInt(el);\r\n                return num < 1 ? 1 : num > 15 ? 15 : num;\r\n            });\r\n            setList(calculateVals);\r\n        }\r\n    }, [input])\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <p className=\"form__instructions\">Which buildings will get to see today's beautiful sunset? Please enter the building heights below, separated by comma, space, or whatever you'd like to use! <br />Press Done when you've ready!</p>\r\n            <div className=\"form-control\">\r\n            <input type=\"text\" className=\"form__input\" value={input} onChange={(e)=>{ setInput(e.target.value) }} placeholder=\"Enter building heights here\"/>\r\n                <button className=\"btn--done\" onClick={()=> setFormActive(false)}>Done!</button>\r\n            </div>\r\n            <p className=\"form__hint\">Enter up to 20 buildings, with a height value from 1 to 15.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryForm;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMinus, faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Building = ({ height, visibility, index, formActive, updateBldg,deleteBldg }) => {\r\n    let visHeight = height * 25;\r\n    let visGradient = 'linear-gradient(90deg, rgba(247,209,134,1) 0%, rgba(195,122,0,1) 100%)';\r\n    let darkGradient = 'linear-gradient(90deg, rgba(106,73,154,1) 0%, rgba(22,0,98,1) 100%)';\r\n    let bgColor = visibility ? visGradient : darkGradient;\r\n    let style = {\r\n        height : `${visHeight}px`,\r\n        background: bgColor\r\n    }\r\n\r\n    const submitBldgUpdate = (val) => {\r\n        if ((val === -1 && height > 1) || (val === 1 && height < 15)) updateBldg(index, val);\r\n    }\r\n    return (\r\n        <div>\r\n            {!formActive && <button className=\"btn--add\" onClick={()=> submitBldgUpdate(1)}><FontAwesomeIcon icon={faPlus} /></button>}\r\n            <div className={formActive ? \"building\" : \"building building--set\"} style={style}>\r\n                {!formActive && <div className=\"building-hover\">\r\n                        <FontAwesomeIcon icon={faTrash} onClick={()=>{if (!formActive) deleteBldg(index)}} className=\"btn--trash\"/>\r\n                    </div>}\r\n            </div>\r\n            {!formActive && <button className=\"btn--sub\" onClick={()=> submitBldgUpdate(-1)}><FontAwesomeIcon icon={faMinus} /></button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Building;","import React from 'react';\r\nimport Building from './Building';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBuilding, faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst Buildings = ({ list = [], updateBldg, formActive, addBldg, deleteBldg }) => {\r\n    let max = -1;\r\n    return (\r\n        <div>\r\n            <div className=\"buildings__wrapper\">\r\n                {!formActive && <button className=\"btn--add-bldg\" onClick={()=>addBldg(true)}><FontAwesomeIcon icon={faBuilding} /></button>}\r\n                <div className=\"buildings\">\r\n                    { list.length > 0 && list.map((height, index)=> {\r\n                        let visibility = height > max ? true : false;\r\n                        max = height > max ? height : max;\r\n                        return <Building \r\n                            key={index} \r\n                            height={height} \r\n                            visibility={visibility} \r\n                            index={index}\r\n                            updateBldg={updateBldg}\r\n                            formActive={formActive}\r\n                            deleteBldg={deleteBldg}\r\n                        />\r\n\r\n                    })}\r\n                </div>\r\n                {!formActive && <button className=\"btn--add-bldg\" onClick={()=>addBldg(false)}><FontAwesomeIcon icon={faBuilding} /></button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buildings;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport NavBar from './components/NavBar';\r\nimport EntryForm from './components/EntryForm';\r\nimport Buildings from './components/Buildings';\r\n\r\nfunction App() {\r\n  const [ list, setList ] = useState([]);\r\n  const [ formActive, setFormActive ] = useState(true); \r\n\r\n  const updateBldg = (index, val) => {\r\n    setList(list.map((el, i)=> i === index  ? el + val : el));\r\n  }\r\n\r\n  const addBldg = (atFront) => {\r\n    if (list.length >= 20) return;\r\n    let arr = atFront ? [1].concat(list) : list.concat([1]);\r\n    setList(arr);\r\n  }\r\n\r\n  const deleteBldg = (index) => {\r\n    setList(list.slice(0, index).concat(list.slice(index+1)));\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      {formActive && <EntryForm setList={setList} setFormActive={setFormActive}/>}\r\n      <Buildings list={list} updateBldg={updateBldg} formActive={formActive} addBldg={addBldg} deleteBldg={deleteBldg}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/sunset-512.ba69a265.png\";"],"sourceRoot":""}